@page "/CategoryGetDetails/{Id:guid}"

@using OnlineCourse.Model.Models
@using OnlineCourse.Service
@inject ICategoryService CategoryService;
@inject NavigationManager _navigationManager


@if (_category == null)
{
    <p>Loading .... </p>
}
else
{
    <div class="table-responsive">
        <span>Category Id: @_category.Id</span>
        <span>Category Id: @Id</span>
        <h1> @_category.Name</h1>
        <p>@_category.Description</p>
        <table class="table">
            <thead>
                <tr>
                    <th> Id</th>
                    <th>Name</th>
                    <th>Desc</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var course in _category.Courses)
                {
                    <tr>
                        <td>@course.Id</td>
                        <td>@course.Name</td>
                        <td>@course.Description</td>
                    </tr>
                }
                
            </tbody>
        </table>
    </div>
}
@code {
    [Parameter]
    public Guid Id { get; set; }

    CategoryModel _category;
    protected override async Task OnInitializedAsync()
    {
        // Id = "94561889-5369-4dcd-82e4-d0d7f83cdf4f";
       string RequestUrl = "Categories/" + Id.ToString();
        _category = await CategoryService.GetAsync(RequestUrl);
    }

}